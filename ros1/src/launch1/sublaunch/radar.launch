<?xml version="1.0"?>
<launch>
    <arg name="radar_ns"            default="radar"/>
    <arg name="urdf"                default="false"/>
    <arg name="cloud_name"          default="PointCloud"/>
    <arg name="parent_link_name"    default="base"/>
    <arg name="link_name"           default="$(arg radar_ns)_link"/>
    <arg name="command_port_number" default="0"/>
    <arg name="data_port_number"    default="1"/>
    <arg name="device_name"         default="radar"/>
    <arg name="pos"                 default="0 0 0 0 0 0"/>

    <arg name="min_height"          default="-1"/>
    <arg name="max_height"          default="1"/>
    <arg name="range_min"           default="0"/>
    <arg name="range_max"           default="10"/>
    <arg name="scan_time"           default="0.1"/>
    <arg name="use_inf"             default="true"/>
    <arg name="transform_tolerance" default="0.001"/>
    <arg name="ns" default="radar"/>
    
    <arg name="urdf_file" default="$(dirname)/description/urdf/radar.urdf"  />
    <param name="robot_description" textfile="$(arg urdf_file)"/>
    

    <arg name="max_allowed_elevation_angle_deg" default="90"
        doc="Maximum allowed elevation angle in degrees for detected object
        data [0 > value >= 90]}"/>
    <arg name="max_allowed_azimuth_angle_deg" default="90"
        doc="Maximum allowed azimuth angle in degrees for detected object
        data [0 > value >= 90]}"/>  


    <group ns="$(arg radar_ns)">
        <remap from="/ti_mmwave/radar_scan_pcl" to="/$(arg radar_ns)/$(arg cloud_name)"/>

        <!-- mmWave_Manager node -->
        <node pkg="ti_mmwave_rospkg" type="ti_mmwave_rospkg" name="$(arg device_name)">
            <param name="command_port" value="/dev/ttyACM$(arg command_port_number)"  />
            <param name="command_rate" value="115200"   />
            <param name="data_port" value="/dev/ttyACM$(arg data_port_number)"  />
            <param name="data_rate" value="921600"   />
            <param name="max_allowed_elevation_angle_deg"
                    value="$(arg max_allowed_elevation_angle_deg)"   />
            <param name="max_allowed_azimuth_angle_deg"
                    value="$(arg max_allowed_azimuth_angle_deg)"   />
            <param name="frame_id" value="$(arg link_name)"/>
        </node>

        <!-- mmWaveQuickConfig node (terminates after configuring mmWave sensor) -->
        <node pkg="ti_mmwave_rospkg" type="mmWaveQuickConfig" name="mmWaveQuickConfig"
                args="$(find ti_mmwave_rospkg)/cfg/2d/best_range_reso.cfg"
                />

        <node pkg="tf" type="static_transform_publisher" name="link"
                args="$(arg pos) $(arg parent_link_name) $(arg link_name) 30"/> 

        <include file="$(dirname)/flatten.launch">         
            <arg name="input_PointCloud"    value="/$(arg radar_ns)/$(arg cloud_name)"/>
            <arg name="device_frame"        value="$(arg link_name)"/>
            <arg name="min_height"          value="$(arg min_height)"/>
            <arg name="max_height"          value="$(arg max_height)"/>
            <arg name="range_min"           value="$(arg range_min)"/>
            <arg name="range_max"           value="(arg range_max)"/>
            <arg name="scan_time"           value="(arg scan_time)"/>
            <arg name="use_inf"             value="(arg use_inf)"/>
            <arg name="transform_tolerance" value="(arg transform_tolerance)"/>
        </include>
        <!--
        <param name="robot_description" textfile="$(arg urdf_file)"/>
        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />
        -->
    </group>
</launch>
<!--
<launch>
  <arg name="model" />

  <param name="robot_description" textfile="$(find radar4)/urdf/radar4.urdf" />

  <node name="joint_state_publisher_gui" pkg="joint_state_publisher_gui" type="joint_state_publisher_gui" />

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />

  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find radar4)/urdf.rviz" />
</launch>
-->